definitions:
  httputil.BadRequestErrorResponse:
    properties:
      error_code:
        example: 400
        type: integer
      message:
        example: Invalid request parameters
        type: string
      timestamp:
        example: "2024-07-18T15:36:59Z"
        type: string
    type: object
  httputil.UnauthorizedErrorResponse:
    properties:
      error_code:
        example: 401
        type: integer
      message:
        example: Unauthorized access
        type: string
      timestamp:
        example: "2024-07-18T15:36:59Z"
        type: string
    type: object
  httputil.UserAuthenticatedResponse:
    properties:
      token:
        example: eyJhbGciOiAiSFMyNTeHBpcmVkIjogMTY5MDY1TMwMDB9.njvE5Lgs1fjr-mL6l7QJbdFfL86D4HK4XsEFPfSb2X8
        type: string
      tokenType:
        example: Bearer
        type: string
    type: object
  models.NewUserRequest:
    properties:
      confirmation_password:
        example: password
        type: string
      email:
        example: user@domain.com
        type: string
      password:
        example: password
        type: string
    required:
    - confirmation_password
    - email
    - password
    type: object
  models.UserProfile:
    properties:
      email:
        example: user@domain.com
        type: string
      first_name:
        example: John
        type: string
      id:
        example: 1
        type: integer
      last_name:
        example: Doe
        type: string
    type: object
  services.Credentials:
    properties:
      email:
        example: user@domain.com
        type: string
      password:
        example: password
        type: string
    type: object
  services.NewPasswordEmailRequest:
    properties:
      email:
        example: user@domain.com
        type: string
    required:
    - email
    type: object
info:
  contact: {}
paths:
  /login:
    post:
      consumes:
      - application/json
      description: Authenticate user by email and password
      parameters:
      - description: Email and Password
        in: body
        name: Credentials
        required: true
        schema:
          $ref: '#/definitions/services.Credentials'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/httputil.UserAuthenticatedResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.BadRequestErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/httputil.UnauthorizedErrorResponse'
        "500":
          description: Internal Server Error
      summary: Authenticate user
      tags:
      - Auth
  /register:
    post:
      consumes:
      - application/json
      description: Register an user by email and password
      parameters:
      - description: Email, Password and Password Confirmation
        in: body
        name: User
        required: true
        schema:
          $ref: '#/definitions/models.NewUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.BadRequestErrorResponse'
        "500":
          description: Internal Server Error
      summary: Register an user
      tags:
      - Auth
  /reset-password:
    post:
      consumes:
      - application/json
      description: Send email with token to reset password if user exists, is active
        and is not using provider authentication, otherwise does nothing
      parameters:
      - description: User Email
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/services.NewPasswordEmailRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.BadRequestErrorResponse'
        "500":
          description: Internal Server Error
      summary: Reset password
      tags:
      - Auth
  /user:
    get:
      description: Return profile for authenticated user
      produces:
      - application/json
      responses:
        "200":
          description: User Profile
          schema:
            $ref: '#/definitions/models.UserProfile'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.BadRequestErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/httputil.UnauthorizedErrorResponse'
        "500":
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: Get user profile
      tags:
      - User
  /verify:
    get:
      consumes:
      - application/json
      description: Verify user by email verification token
      parameters:
      - description: Email verification Token
        in: query
        name: Token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.BadRequestErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/httputil.UnauthorizedErrorResponse'
        "500":
          description: Internal Server Error
      summary: Authenticate user
      tags:
      - Auth
swagger: "2.0"
