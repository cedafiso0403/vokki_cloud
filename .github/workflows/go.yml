# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  # build:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v4

  #   - name: Set up Go
  #     uses: actions/setup-go@v4
  #     with:
  #       go-version: '1.22.5'

  #   - name: Build
  #     run: go build -v ./...

  #   - name: Test
  #     run: go test -v ./...

  deploy:
    name: deploy
    runs-on: ubuntu-latest
    env:
      AWS_INSTANCE_SG_ID: ${{ secrets.AWS_SECURITY_GROUP_ID }}  
    steps:
      - name: configure_aws_credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_ACCESS_KEY }}
          aws-region: us-east-2
      - name: get runner ip address
        id: ip
        uses: haythem/public-ip@v1.3
      - name: whitelist runner ip address
        run: |
          aws ec2 authorize-security-group-ingress \
            --group-id $AWS_INSTANCE_SG_ID \
            --protocol tcp \
            --port 22 \
            --cidr ${{ steps.ip.outputs.ipv4 }}/32
      - name: Deploy to EC2
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.AWS_SSH_KEY }}

      - name: Create SSH config
        run: |
          echo -e "Host $SSH_HOST\n\tStrictHostKeyChecking no\n\tIdentityFile ~/.ssh/id_ed25519" >> ~/.ssh/config
        env:
          SSH_HOST: ${{ secrets.AWS_SECRET_ADDRESS }}
      - name: SSH into EC2 and Clone Repo
        run: |
          ssh -o StrictHostKeyChecking=no -p $SSH_PORT $SSH_USER@$SSH_HOST << 'EOF'
          rm -rf vokki_cloud
          git clone git@github.com:cedafiso0403/vokki_cloud.git /home/ec2-user/
          SUPABASE_API_KEY=${{ secrets.SUPABASE_API_KEY }}
          DB_URL=${{ secrets.DB_URL }}
          FROM_EMAIL=${{ secrets.FROM_EMAIL }}
          FROM_EMAIL_PASSWORD=${{  secrets.FROM_EMAIL_PASSWORD }}
          git pull
          git checkout main
          go build ./vokki_cloud
          go run ./vokki_cloud/cmd/vokki_cloud/main.go
          EOF
        env:
          SSH_USER: 'ec2-user'
          SSH_HOST: ${{ secrets.AWS_SECRET_ADDRESS }}
          SSH_PORT: '22'
      - name: disconnect from EC2 instance
        run: exit
      - name: revoke runner ip address
        run: |
          aws ec2 revoke-security-group-ingress \
            --group-id $AWS_INSTANCE_SG_ID \
            --protocol tcp \
            --port 22 \
            --cidr ${{ steps.ip.outputs.ipv4 }}/32