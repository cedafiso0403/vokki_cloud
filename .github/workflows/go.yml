# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: 
      - '*'
  pull_request:
    branches: 
      - '*'

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.22.5'

    - name: Build
      run: go build -v ./...

    - name: Test
      run: go test -v ./...

  deploy:
    if: github.ref == 'refs/heads/main'
    needs: build
    name: deploy
    runs-on: ubuntu-latest
    env:
      AWS_INSTANCE_SG_ID: ${{ secrets.AWS_SECURITY_GROUP_ID }}  
    steps:
      - name: Download deploy script
        uses: actions/download-artifact@v2
        with:
          name: deploy-script
          path: ~/deploy
      - name: configure_aws_credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_ACCESS_KEY }}
          aws-region: us-east-2
      - name: get runner ip address
        id: ip
        uses: haythem/public-ip@v1.3
      - name: whitelist runner ip address
        run: |
          aws ec2 authorize-security-group-ingress \
            --group-id $AWS_INSTANCE_SG_ID \
            --protocol tcp \
            --port 22 \
            --cidr ${{ steps.ip.outputs.ipv4 }}/32
      - name: Copy deploy script to remote server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.AWS_SECRET_ADDRESS }}
          username: ec2-user
          port: 22
          key: ${{ secrets.AWS_SSH_KEY }}
          source: ~/deploy/deploy.sh
          target: ~
      - name: SSH into EC2 and execute deploy script
        uses: appleboy/ssh-action@master
        with:
            host: ${{ secrets.AWS_SECRET_ADDRESS }}
            username: ec2-user
            port: 22
            key: ${{ secrets.AWS_SSH_KEY }}
            script: |
              chmod +x ~/deploy.sh
              ~/deploy.sh
      - name: revoke runner ip address
        run: |
          aws ec2 revoke-security-group-ingress \
            --group-id $AWS_INSTANCE_SG_ID \
            --protocol tcp \
            --port 22 \
            --cidr ${{ steps.ip.outputs.ipv4 }}/32